#!/bin/sh

set -e
set -u

PLATFORM=""

CC="gcc"
CPP="g++"
CFLAGS="-Os -Werror"
LFLAGS=""
SO_EXT="so"
SO_CFLAGS="-fPIC"
SO_LFLAGS="-shared"
JSCORE_CFLAGS=""
JSCORE_LFLAGS=""
READLINE_CFLAGS=""
READLINE_LFLAGS=""
ICONV_CFLAGS=""
ICONV_LFLAGS=""

CONFIG_MK="config.mk"
CONFIG_FLAGS="PLATFORM CC CPP CFLAGS LFLAGS SO_EXT SO_CFLAGS SO_LFLAGS JSCORE_CFLAGS JSCORE_LFLAGS READLINE_CFLAGS READLINE_LFLAGS ICONV_CFLAGS ICONV_LFLAGS"

if [ "$(uname)" = "Darwin" ]; then

    PLATFORM="cocoa"
    CFLAGS="$CFLAGS -force_cpusubtype_ALL -mmacosx-version-min=10.4 -arch i386"
    LFLAGS=""
    SO_EXT="dylib"
    SO_CFLAGS=""
    SO_LFLAGS='-dynamiclib -Wl,-install_name,`basename $@`'
    JSCORE_CFLAGS="-framework JavaScriptCore"
    JSCORE_LFLAGS="-framework JavaScriptCore"
    ICONV_CFLAGS=""
    ICONV_LFLAGS="-liconv"

elif pkg-config --version >/dev/null 2>&1; then

    for pkg in webkitgtk-3.0 webkit-3.0 webkitgtk-1.0 webkit-1.0; do
        if pkg-config --modversion "$pkg" >/dev/null 2>&1; then
            PLATFORM="gtk"
            JSCORE_CFLAGS=`pkg-config --cflags $pkg`
            JSCORE_LFLAGS=`pkg-config --libs $pkg`
            break
        fi
    done

fi

check_header () {
    echo "#include <$1>" | "$CC" -E -x c /dev/stdin $JSCORE_CFLAGS >/dev/null 2>&1
}

echo "Platform: $PLATFORM"

if check_header "JavaScriptCore/JavaScript.h"; then
	echo "JSC header: JavaScriptCore/JavaScript.h"
    JSCORE_CFLAGS="$JSCORE_CFLAGS -DUSE_JAVASCRIPT_H"
elif check_header "JavaScriptCore/JavaScriptCore.h"; then
	echo "JSC header: JavaScriptCore/JavaScriptCore.h"
    JSCORE_CFLAGS="$JSCORE_CFLAGS -DUSE_JAVASCRIPTCORE_H"
else
	echo "Warning: no JavaScriptCore found." 1>&2
fi

if check_header "editline/readline.h"; then
	echo "Line editing lib: editline"
    READLINE_CFLAGS="-DUSE_EDITLINE"
    READLINE_LFLAGS="-ledit"
elif check_header "readline/readline.h"; then
	echo "Line editing lib: readline"
    READLINE_CFLAGS="-DUSE_READLINE"
    READLINE_LFLAGS="-lreadline"
else
	echo "Warning: no line editing lib found." 1>&2
fi

rm -f "$CONFIG_MK"
for flag in $CONFIG_FLAGS; do
    echo "$flag=$(eval "echo \$$flag")" >> "$CONFIG_MK"
done

echo "Ok!"
